<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorPrompt.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="categoryChooserControl.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>